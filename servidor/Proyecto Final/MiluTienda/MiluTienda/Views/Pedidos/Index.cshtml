@model PaginatedList<MiluTienda.Models.Pedido>

@{
    ViewData["Title"] = "Index";
}

<h1>Pedidos</h1>

<!-- Filtro por Fecha y Email del Cliente -->
<form method="get">
    <div class="row g-2 align-items-end">
        <!-- Campo de Fecha de creación -->
        <div class="col-md-6">
            <div class="form-group">
                <label for="fechaCreacion" class="form-label">Fecha de creación</label>
                <input type="date" name="fechaCreacion" class="form-control" id="fechaCreacion" value="@ViewData["FechaInicio"]" />
            </div>
        </div>

        <!-- Campo de Email -->
        <div class="col-md-6">
            <div class="form-group">
                <label for="email" class="form-label">Email</label>
                <input type="text" name="email" class="form-control" value="@ViewData["Email"]" placeholder="Ingrese el email del cliente" />
            </div>
        </div>

        <!-- Botones de acción -->
        <div class="col-12 d-flex justify-content-between mt-2">
            <button type="submit" class="btn btn-primary">Filtrar</button>
            <button type="button" class="btn btn-secondary" onclick="clearFilters()">Clear</button>
        </div>
    </div>
</form>





<!-- Mostrar los pedidos -->
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Id)</th>
            <th><strong>@Html.DisplayNameFor(model => model.FirstOrDefault().Estado)</strong></th>
            <th>Email Cliente</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FechaCreacion)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Confirmado)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Cobrado)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Enviado)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Devuelto)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Anulado)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Estado.Descripcion)</td>
                <td>@Html.DisplayFor(modelItem => item.Cliente.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.FechaCreacion)</td>
                <td>@Html.DisplayFor(modelItem => item.Confirmado)</td>
                <td>@Html.DisplayFor(modelItem => item.Cobrado)</td>
                <td>@Html.DisplayFor(modelItem => item.Enviado)</td>
                <td>@Html.DisplayFor(modelItem => item.Devuelto)</td>
                <td>@Html.DisplayFor(modelItem => item.Anulado)</td>
                <td>
                    @* <!-- Botón Editar --> *@
                    @* <a href="@Url.Action("Edit", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-outline-warning" title="Editar"> *@
                    @*     <i class="fas fa-edit"></i> *@
                    @* </a> *@
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <a href="@Url.Action("Details", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-warning" title="Borrar">
                            <i class="bi bi-info-circle"></i>
                        </a>
                        <a href="@Url.Action("Delete", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-outline-danger" title="Borrar">
                            <i class="bi bi-trash3-fill"></i>
                        </a>
                        @if (item.EstadoId < 4) {
                            <!-- Botón Avanzar -->
                            <a href="@Url.Action("AvanzarEstado", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-success" title="Avanzar Estado">
                                <i class="fas fa-forward"></i>
                            </a>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Paginación -->
<div class="d-flex justify-content-between">
    <div>
        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index" asp-route-page="1" class="btn btn-primary">Primera</a>
            <a asp-action="Index" asp-route-page="@((Model.PageIndex - 1))" class="btn btn-primary">Anterior</a>
        }
    </div>
    <div>
        <span>Página @Model.PageIndex de @Model.TotalPages</span>
    </div>
    <div>
        @if (Model.HasNextPage)
        {
            <a asp-action="Index" asp-route-page="@((Model.PageIndex + 1))" class="btn btn-primary">Siguiente</a>
            <a asp-action="Index" asp-route-page="@Model.TotalPages" class="btn btn-primary">Última</a>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var fechaInicioInput = document.getElementById("fechaInicio");
            var fechaFinInput = document.getElementById("fechaFin");

            // Si los inputs tienen valores, los formateamos
            if (fechaInicioInput.value) {
                var date = new Date(fechaInicioInput.value);
                fechaInicioInput.value = date.toLocaleDateString('es-ES'); // dd/mm/yyyy
            }

            if (fechaFinInput.value) {
                var date = new Date(fechaFinInput.value);
                fechaFinInput.value = date.toLocaleDateString('es-ES'); // dd/mm/yyyy
            }

            // Al enviar el formulario, convertimos las fechas nuevamente al formato yyyy-mm-dd
            document.querySelector("form").addEventListener("submit", function () {
                var fechaInicioValue = fechaInicioInput.value.split('/'); // dd/mm/yyyy
                if (fechaInicioValue.length === 3) {
                    fechaInicioInput.value = fechaInicioValue[2] + '-' + fechaInicioValue[1] + '-' + fechaInicioValue[0]; // yyyy-mm-dd
                }

                var fechaFinValue = fechaFinInput.value.split('/');
                if (fechaFinValue.length === 3) {
                    fechaFinInput.value = fechaFinValue[2] + '-' + fechaFinValue[1] + '-' + fechaFinValue[0]; // yyyy-mm-dd
                }
            });
        });
    </script>
}

<script>
    function clearFilters() {
        // Limpia los valores del formulario
        document.getElementById('fechaCreacion').value = '';
        document.getElementsByName('email')[0].value = '';

        // Redirige a la acción Index sin parámetros
        window.location.href = '@Url.Action("Index", "Pedidos")';
    }
</script>