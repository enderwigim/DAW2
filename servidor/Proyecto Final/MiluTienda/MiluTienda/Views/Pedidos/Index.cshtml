@model PaginatedList<MiluTienda.Models.Pedido>

@{
    ViewData["Title"] = "Pedidos";
}

<div class="container my-4">
    <!-- Encabezado -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-pink">Pedidos</h1>
    </div>

    <!-- Filtro por Fecha y Email del Cliente -->
    <form method="get" class="mb-4">
        <div class="row g-3 align-items-end">
            <div class="col-md-6">
                <label for="email" class="form-label text-pink">Email del Cliente</label>
                <input type="text" name="email" class="form-control border-pink" placeholder="Ingrese el email del cliente" value="@ViewData["Email"]" />
            </div>

            <!-- Botones de acción -->
            <div class="col-12 d-flex justify-content-end gap-3 mt-3">
                <button type="submit" class="btn btn-custom-inverse">
                    <i class="bi bi-funnel"></i> Filtrar
                </button>
                <button type="button" class="btn btn-secondary" onclick="clearFilters()">
                    <i class="bi bi-x-circle"></i> Limpiar
                </button>
            </div>
        </div>
    </form>

    <!-- Mostrar los pedidos -->
    <table class="table table-hover table-bordered text-center shadow-sm">
        <thead class="table-pink">
            <tr>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Id)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Estado)</th>
                <th class="text-dark">Email Cliente</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().FechaCreacion)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Confirmado)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Cobrado)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Enviado)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Devuelto)</th>
                <th class="text-dark">@Html.DisplayNameFor(model => model.FirstOrDefault().Anulado)</th>
                <th class="text-dark">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Id)</td>
                    
                    <td class="align-middle">
                        <span class="badge @(item.Estado.Descripcion == "Pendiente" ? "bg-warning text-dark" : item.Estado.Descripcion == "Enviado" ? "bg-primary" : "bg-success")">
                            @Html.DisplayFor(modelItem => item.Estado.Descripcion)
                        </span>
                    </td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Cliente.Email)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.FechaCreacion)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Confirmado)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Cobrado)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Enviado)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Devuelto)</td>
                    <td class="align-middle">@Html.DisplayFor(modelItem => item.Anulado)</td>
                    <td class="align-middle">
                        <div class="btn-group" role="group">
                            <a href="@Url.Action("Details", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-outline-info" title="Detalles">
                                <i class="bi bi-info-circle"></i>
                            </a>
                            <a href="@Url.Action("Delete", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-outline-danger" title="Borrar">
                                <i class="bi bi-trash3-fill"></i>
                            </a>
                            @if (item.EstadoId <= 4 && item.Estado.Descripcion != "Pendiente")
                            {
                                <a href="@Url.Action("AvanzarEstado", "Pedidos", new { id = item.Id })" class="btn btn-sm btn-success" title="Avanzar Estado">
                                    <i class="bi bi-forward-fill"></i>
                                </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Paginación -->
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index" asp-route-page="1" class="btn btn-outline-secondary mx-1">Primera</a>
                <a asp-action="Index" asp-route-page="@((Model.PageIndex - 1))" class="btn btn-outline-secondary mx-1">Anterior</a>
            }
        </div>
        <div class="text-pink fw-bold">
            Página @Model.PageIndex de @Model.TotalPages
        </div>
        <div>
            @if (Model.HasNextPage)
            {
                <a asp-action="Index" asp-route-page="@((Model.PageIndex + 1))" class="btn btn-outline-secondary mx-1">Siguiente</a>
                <a asp-action="Index" asp-route-page="@Model.TotalPages" class="btn btn-outline-secondary mx-1">Última</a>
            }
        </div>
    </div>
</div>



@section Styles {
    <link href="~/css/generales.css" rel="stylesheet" asp-append-version="true" />
}

@section Scripts {
    <script>
        function clearFilters() {
            document.getElementsByName('email')[0].value = '';
            window.location.href = '@Url.Action("Index", "Pedidos")';
        }
    </script>
}