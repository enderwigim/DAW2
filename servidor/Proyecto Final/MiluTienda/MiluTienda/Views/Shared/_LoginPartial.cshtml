@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
           <div id="logOut" class="d-flex align-items-center gap-3 flex-wrap">
                @if (User.IsInRole("Usuario")) {
                    <a id="cart-cont" class="nav-link position-relative"
                       asp-controller="Carrito"
                       asp-action="Index">
                        <i class="bi bi-cart fs-5"></i>
                    </a>
                }

                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-custom text-dark">Logout</button>
                </form>
            </div>

}
else
{

    <a class="btn btn-outline-custom" asp-area="Identity" asp-page="/Account/Login">Login</a>
    <a class="btn btn-custom" asp-area="Identity" asp-page="/Account/Register">Register</a>

}
</ul>

<script>
    function adjustLogoutContainer() {
        var logOutDiv = document.getElementById("logOut");

        if (logOutDiv) { // Verifica que el elemento existe
            if (window.matchMedia("(max-width: 400px)").matches) {
                logOutDiv.className = ""; // Quita todas las clases
            } else {
                logOutDiv.className = "d-flex align-items-center gap-3 flex-wrap"; // Restaura clases
            }
        }
    }

    // Ejecutar al cargar la página
    document.addEventListener("DOMContentLoaded", adjustLogoutContainer);

    // Ejecutar cuando se cambia el tamaño de la pantalla
    window.addEventListener("resize", adjustLogoutContainer);
</script>